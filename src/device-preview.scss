// Include gradient with specified direction in degrees

@mixin gradient($dir) {
    background-color: var(--color-a);
    background-image: linear-gradient(#{$dir}deg, var(--color-a) 0%, var(--color-b) 74%);
}

// Variable Scope

.device {

    --color-a: red;
    --color-b: blue;

    --border-radius: 20px;

    --front-top-offset: 35px;
    --front-bottom-offset: 70px;

    --screen-offset: 5px;
    --screen-border-radius: 6px;

    --rotate-x: 37deg;
    --rotate-y: 49deg;
    --rotate-z: 5deg;

    --thickness: 30px;

    perspective: 1200px;  
    position: relative;
    * {
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;
        position: absolute;
    }
}

// Rotation

.device-wrapper,
.device-shadow-inner { 
    transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z));
}

// Stretched Classes

.device-wrapper,
.device-underlay,
.device-front,
.device-back,
.device-corners,
.device-shadow,
.device-shadow-inner { 
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

// Front Back

.device-front,
.device-back {
    @include gradient(315);
    border-radius: var(--border-radius);
    overflow: hidden;
}

.device-back {
    transform: translateZ(calc(var(--thickness) * -1));
}

// Screen

.device-screen {
    background-size: 100%;
    top: calc(var(--front-top-offset) + var(--screen-offset));
    left: var(--screen-offset);
    right: var(--screen-offset);
    bottom: calc(var(--front-bottom-offset) + var(--screen-offset));
    border-radius: var(--screen-border-radius);
}

// Top Right Bottom Left

.device-right,
.device-left {
    @include gradient(315);
}

.device-bottom {
    background-color: var(--color-a);
    background-image: linear-gradient(315deg, var(--color-a) 0%, var(--color-b) 50%, var(--color-a) 100%);
}

.device-top {
    background-color: var(--color-a);
    background-image: linear-gradient(315deg, var(--color-b) 0%, var(--color-a) 50%, var(--color-b) 100%);
}

.device-left,
.device-right {
    top: var(--border-radius);
    bottom: var(--border-radius);
    left: 0;
    width: calc(var(--thickness) + 1px);
    transform: rotateY(270deg) translateX(calc((var(--thickness) / 2) * -1)) translateY(0) translateZ(calc(var(--thickness) / 2));
}

.device-right {
    left: auto;
    right: 0;
    transform: rotateY(270deg) translateX(calc((var(--thickness) / 2) * -1)) translateY(0) translateZ(calc((var(--thickness) / 2) * -1));
}

.device-top,
.device-bottom {
    top: 0;
    left: var(--border-radius);
    right: var(--border-radius);
    height: calc(var(--thickness) + 1px);
    transform: rotateX(90deg) translateX(0) translateY(calc((var(--thickness) / 2) * -1)) translateZ(calc((var(--thickness) / 2)));
}

.device-bottom {
    top: auto;
    bottom: 0;
    transform: rotateX(90deg) translateX(0) translateY(calc((var(--thickness) / 2) * -1)) translateZ(calc((var(--thickness) / 2) * -1));
}

// Corners

@mixin corner_transform($rotate_x, $rotate_y) {
    transform: rotateX(#{$rotate_x}deg) rotateY(#{$rotate_y}deg) translateY(calc((var(--thickness) / 2) * -1));
}

.device-corner {
    width: var(--border-radius);
    height: calc(var(--thickness) + 1px);
    opacity: 1;
    .device-corner-segment {
        left: 100%;
        height: 100%;
        opacity: 1;
    }
    &.bottom-left {
        top: calc(100% - (var(--thickness) / 2));
        left: var(--border-radius);
        @include corner_transform(90, 180);
        .device-corner-segment { 
            background: var(--color-a);
        }
    }
    &.bottom-right {
        bottom: calc((var(--thickness) / 2));
        right: calc((var(--border-radius) / 2) * -1);
        @include corner_transform(90, 90);
        .device-corner-segment { 
            background: var(--color-a);
        }
    }
    &.top-left {
        top: calc((var(--thickness) / 2));
        left: calc((var(--border-radius) / 2) * -1);
        @include corner_transform(90, 270);
        .device-corner-segment { 
            background: var(--color-b);
        }
    }
    &.top-right {
        top: calc((var(--thickness) / 2) * -1);
        right: var(--border-radius);
        @include corner_transform(90, 0);
        .device-corner-segment { 
            background: var(--color-b);
        }
    }
}

// Shadow

.device-shadow {
    transform: translate3d(-90px, 170px, -500px) scale(1.1);
}

.device-shadow-inner {
    opacity: 1;
    background: black;
    box-shadow: 0 0 25px 35px rgba(0,0,0,1);
    opacity: 0.35;
    border-radius: calc(var(--border-radius) / 2);
}

// Gizmos

.device-gizmo-top-left {
    top: 12px;
    left: 12px;
}

.device-gizmo-top-right {
    top: 12px;
    right: 12px;
}

.device-gizmo-bottom-center {
    bottom: 12px;
    left: 50%;
    transform: translateX(-50%);
}

.device-gizmo-center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.device-gizmo-left {
    top: 50%;
    left: 5%;
    transform: translateY(-50%);
}

.device-gizmo-bottom {
    left: 50%;
    bottom: 5%;
    transform: translateX(-50%);
}

.device-speaker-dot {
    position: static;
    float: left;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    margin: 0 4px 0 0;
    background: linear-gradient(45deg, rgba(0,0,0,0.5) 0%, rgba(25,25,25,0.75) 100%);
}

.device-left,
.device-right {
    .device-speaker-dot {
        float: none;
        margin: 4px 0 0 0;
    }
}

.device-power {
    bottom: 0;
    height: 8px;
    width: 35px;
    background: linear-gradient(45deg, rgba(0,0,0,0.5) 0%, rgba(25,25,25,0.75) 100%);
    border-radius: 3px;
}

.device-camera {
    height: 22px;
    width: 22px;
    background: linear-gradient(45deg, rgba(0,0,0,0.25) 0%, rgba(25,25,25,0.5) 100%);
    border-radius: 50%;
}

.device-button {
    height: 55px;
    width: 55px;
    background: linear-gradient(45deg, rgba(0,0,0,0.25) 0%, rgba(25,25,25,0.5) 100%);
    border-radius: 50%;
}
