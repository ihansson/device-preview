// Include gradient with specified direction in degrees

@mixin gradient($dir) {
    background-color: var(--color-a);
    background-image: linear-gradient(#{$dir}deg, var(--color-a) 0%, var(--color-b) 100%);
}

// Variable Scope

.device {

    --color-a: red;
    --color-b: blue;

    --border-radius: 20px;

    --front-top-offset: 35px;
    --front-bottom-offset: 70px;

    --screen-offset: 5px;
    --screen-border-radius: 6px;

    --rotate-x: 37deg;
    --rotate-y: 49deg;
    --rotate-z: 5deg;

    --thickness: 30px;

    --perspective-multiplier: 3;
    --device-width: 400px;

    perspective: calc(var(--device-width) * var(--perspective-multiplier)); 
    position: relative;

    * {
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;
        position: absolute;
    }
}

// Scale Controller
.device-scalar {
    transform-origin: top left;
}

// Rotation

.device-wrapper,
.device-shadow-inner { 
    transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z));
}

// Stretched Classes

.device-wrapper,
.device-underlay,
.device-front,
.device-back,
.device-corners,
.device-shadow,
.device-shadow-inner,
.device-screen-iframe { 
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

// Front Back

.device-front,
.device-back {
    @include gradient(315);
    border-radius: var(--border-radius);
    overflow: hidden;
}

.device-back {
    transform: translateZ(calc(var(--thickness) * -1));
}

// Screen

.device-screen {
    overflow: hidden;
    background-size: 100%;
    top: calc(var(--front-top-offset) + var(--screen-offset));
    left: var(--screen-offset);
    right: var(--screen-offset);
    bottom: calc(var(--front-bottom-offset) + var(--screen-offset));
    border-radius: var(--screen-border-radius);
}

.device-screen-iframe {
    width: 100%;
    height: 100%;
}

.device-screen-video {
    top: 50%;
    left: 50%;
    height: 100%;
    transform: translate(-50%, -50%);
}

// Top Right Bottom Left

.device-right,
.device-left {
    @include gradient(315);
}

.device-bottom {
    background-color: var(--color-a);
    background-image: linear-gradient(315deg, var(--color-a) 0%, var(--color-b) 50%, var(--color-a) 100%);
}

.device-top {
    background-color: var(--color-a);
    background-image: linear-gradient(315deg, var(--color-b) 0%, var(--color-a) 50%, var(--color-b) 100%);
}

.device-left,
.device-right {
    top: var(--border-radius);
    bottom: var(--border-radius);
    left: 0;
    width: calc(var(--thickness) + 1px);
    transform: rotateY(270deg) translateX(calc((var(--thickness) / 2) * -1)) translateY(0) translateZ(calc(var(--thickness) / 2));
}

.device-right {
    left: auto;
    right: 0;
    transform: rotateY(270deg) translateX(calc((var(--thickness) / 2) * -1)) translateY(0) translateZ(calc((var(--thickness) / 2) * -1));
}

.device-top,
.device-bottom {
    top: 0;
    left: var(--border-radius);
    right: var(--border-radius);
    height: calc(var(--thickness) + 1px);
    transform: rotateX(90deg) translateX(0) translateY(calc((var(--thickness) / 2) * -1)) translateZ(calc((var(--thickness) / 2)));
}

.device-bottom {
    top: auto;
    bottom: 0;
    transform: rotateX(90deg) translateX(0) translateY(calc((var(--thickness) / 2) * -1)) translateZ(calc((var(--thickness) / 2) * -1));
}

// Corners

@mixin corner_transform($rotate_x, $rotate_y) {
    transform: rotateX(#{$rotate_x}deg) rotateY(#{$rotate_y}deg) translateY(calc((var(--thickness) / 2) * -1));
}

.device-corner {
    width: var(--border-radius);
    height: calc(var(--thickness) + 1px);
    opacity: 1;
    .device-corner-segment {
        left: 100%;
        height: 100%;
        opacity: 1;
    }
    &.bottom-left {
        top: calc(100% - (var(--thickness) / 2));
        left: var(--border-radius);
        @include corner_transform(90, 180);
        .device-corner-segment { 
            background: var(--color-a);
        }
    }
    &.bottom-right {
        bottom: calc((var(--thickness) / 2));
        right: calc((var(--border-radius) / 2) * -1);
        @include corner_transform(90, 90);
        .device-corner-segment { 
            background: var(--color-a);
        }
    }
    &.top-left {
        top: calc((var(--thickness) / 2));
        left: calc((var(--border-radius) / 2) * -1);
        @include corner_transform(90, 270);
        .device-corner-segment { 
            background: var(--color-b);
        }
    }
    &.top-right {
        top: calc((var(--thickness) / 2) * -1);
        right: var(--border-radius);
        @include corner_transform(90, 0);
        .device-corner-segment { 
            background: var(--color-b);
        }
    }
}

// Shadow

.device-shadow {
    transform: translate3d(calc((var(--device-width) / 4) * -1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1);
}

.device-shadow-inner {
    opacity: 1;
    background: black;
    opacity: 0.25;
    box-shadow: 0 0 calc(var(--device-width) / 20) calc(var(--device-width) / 15) rgba(0,0,0,1);
    border-radius: calc(var(--border-radius) / 2);
}

// Gizmo Positions

.device-gizmo-top-left {
    top: calc((var(--front-top-offset) / 2) + var(--screen-offset));
    left: 4%;
    transform: translateY(-50%);
}

.device-gizmo-top-right {
    top: calc((var(--front-top-offset) / 2) + var(--screen-offset));
    right: 4%;
    transform: translateY(-50%);
}

.device-gizmo-bottom-center {
    bottom: calc((var(--front-bottom-offset) / 2) + var(--screen-offset));
    left: 50%;
    transform: translate(-50%, 50%);
}

.device-gizmo-center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.device-gizmo-left {
    top: 50%;
    left: 5%;
    transform: translateY(-50%);
}

.device-gizmo-right {
    top: 50%;
    right: 5%;
    transform: translateY(-50%);
}

.device-gizmo-bottom {
    left: 50%;
    bottom: 5%;
    transform: translateX(-50%);
}

// Gizmo Speaker

.device-speaker-dot {
    position: static;
    float: left;
    width: calc(var(--thickness) / 4.5);
    height: calc(var(--thickness) / 4.5);
    border-radius: 50%;
    margin: 0 calc(var(--thickness) / 6) 0 0;
    background: linear-gradient(45deg, rgba(0,0,0,0.65) 0%, rgba(0,0,0,0.75) 100%);
    border-left: 2px solid rgba(255,255,255,0.05);
    border-bottom: 2px solid rgba(255,255,255,0.075);
}

.device-left,
.device-right {
    .device-speaker-dot {
        float: none;
        margin: calc(var(--thickness) / 6) 0 0 0;
    }
}

// Gizmo Power

.device-power {
    bottom: 0;
    width: calc(var(--thickness) * 1.5);
    height: calc(var(--thickness) / 2.75);
    background: linear-gradient(45deg, rgba(0,0,0,0.65) 0%, rgba(0,0,0,0.75) 100%);
    border-radius: calc(var(--thickness) / 2);
    border-left: 2px solid rgba(255,255,255,0.05);
    border-bottom: 2px solid rgba(255,255,255,0.075);
}

// Gizmo Camera

.device-camera {
    width: calc(var(--front-top-offset) / 1.75);
    height: calc(var(--front-top-offset) / 1.75);
    background: linear-gradient(45deg, rgba(0,0,0,0.25) 0%, rgba(0,0,0,0.65) 100%);
    border-radius: 50%;
    border-top: 2px solid rgba(255,255,255,0.1);
    border-bottom: 2px solid rgba(255,255,255,0.075);
    &:after {
        content: '';
        position: absolute;
        top: 2px;
        left: 2px;
        right: 2px;
        bottom: 2px;
        background: linear-gradient(45deg, rgba(242,246,248,0.5) 0%, rgba(216,225,231,0.5) 50%, rgba(181,198,208,1) 51%, rgba(224,239,249,1) 100%);
        opacity: 0.05;
        border-radius: 50%;
    }
    &:before {
        content: '';
        position: absolute;
        top: 22%;
        left: 22%;
        width: 7px;
        height: 7px;
        background: white;
        border-radius: 50%;
        opacity: 0.05;
    }
}

// Gizmo Button

.device-button {
    width: calc(var(--front-bottom-offset) / 1.25);
    height: calc(var(--front-bottom-offset) / 1.25);
    background: linear-gradient(45deg, rgba(0,0,0,0.15) 0%, rgba(0,0,0,0.35) 100%);
    border-radius: 50%;
    border-left: 2px solid rgba(255,255,255,0.05);
    border-bottom: 2px solid rgba(255,255,255,0.075);
}

// Gizmo Jack

.device-jack {
    width: calc(var(--thickness) / 2);
    height: calc(var(--thickness) / 2);
    background: linear-gradient(45deg, rgba(0,0,0,0.25) 0%, rgba(0,0,0,0.75) 100%);
    border-radius: 50%;
    border-left: 2px solid rgba(255,255,255,0.1);
}

// Animation

@keyframes device-wobble {
    0 { transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z)); }
    33% { transform: rotateX(calc(var(--rotate-x) - 1deg)) rotateY(calc(var(--rotate-y) + 1deg)) rotateZ(calc(var(--rotate-z) - 1deg)); }
    66% { transform: rotateX(calc(var(--rotate-x) + 1deg)) rotateY(calc(var(--rotate-y) - 1deg)) rotateZ(calc(var(--rotate-z) + 1deg)); }
    100% { transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z)); }
}

.device-wobble {
    .device-wrapper,
    .device-shadow-inner {
        animation: device-wobble 8s infinite;
    }
}

@keyframes device-turn {
    0% { transform: rotateX(0) rotateY(0) rotateZ(0); }
    20% { transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z)); }
    80% { transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z)); }
    100% { transform: rotateX(0) rotateY(0) rotateZ(0); }
}

@keyframes device-turn-shadow {
    0% { transform: translate3d(0, 0, calc(var(--device-width) * -1)) scale(0.8); }
    20% { transform: translate3d(calc((var(--device-width) / 4) * -1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1); }
    80% { transform: translate3d(calc((var(--device-width) / 4) * -1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1); }
    100% { transform: translate3d(0, 0, calc(var(--device-width) * -1)) scale(0.8); }
}

.device-turn {
    .device-wrapper,
    .device-shadow-inner {
        animation: device-turn 4.5s infinite;
    }
    .device-shadow {
        animation: device-turn-shadow 4.5s infinite;
    }
}

@keyframes device-showcase {
    0% { transform: rotateX(0) rotateY(0) rotateZ(0); }
    25% { transform: rotateX(40deg) rotateY(40deg) rotateZ(0deg); }
    45% { transform: rotateX(65deg) rotateY(35deg) rotateZ(5deg); }
    60% { transform: rotateX(50deg) rotateY(-50deg) rotateZ(10deg); }
    80% { transform: rotateX(-50deg) rotateY(-50deg) rotateZ(10deg); }
    100% { transform: rotateX(0) rotateY(0) rotateZ(0); }
}

@keyframes device-showcase-shadow {
    0% { transform: translate3d(0, 0, calc(var(--device-width) * -1)) scale(0.8); }
    25% { transform: translate3d(calc((var(--device-width) / 4) * -1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1); }
    45% { transform: translate3d(calc((var(--device-width) / 4) * -1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1); }
    60% { transform: translate3d(calc((var(--device-width) / 4) * 1), calc(var(--device-width) / 4), calc(var(--device-width) * -1)) scale(1.1); }
    80% { transform: translate3d(calc((var(--device-width) / 4) * 1), calc((var(--device-width) / 4) * -1), calc(var(--device-width) * -1)) scale(1.1); }
    100% { transform: translate3d(0, 0, calc(var(--device-width) * -1)) scale(0.8);; }
}

.device-showcase {
    .device-wrapper,
    .device-shadow-inner {
        transform: rotateX(0) rotateY(0) rotateZ(0);
        animation: device-showcase 12s infinite;
        animation-delay: 1.5s;
    }
    .device-shadow {
        transform: translate3d(0, 0, calc(var(--device-width) * -1)) scale(0.8);
        animation: device-showcase-shadow 12s infinite;
        animation-delay: 1.5s;
    }
}